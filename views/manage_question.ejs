<%- include('admin_header', {active:"sets"}); -%>

<% var canModify = subscription.canAllSet || (subscription.canOwnSet && set.ownerID == user.id) %>

<style>
 .texted {
     color:red;
 }
</style>


<h2> <%= newQuestion ? "Création" : "Modification" %> d'une question</h2>
<!--	Vous pouvez vous connecter &agrave; l'une des salles suivantes :-->
<form  encType="multipart/form-data"  id="newQuestion" method="post" action="<%= config.PATH %>/course/<%= course.id %>/set/<%= set.id %>/question/<%= newQuestion ? "create" : (question.id+"/update") %>">
    <ul class="room" id="listeQue">
	<li class="room">
	    <span class="froom">Énoncé :</span>
	    <textarea <%= canModify ? "" : "readonly" %> name="enonce" style="width:100%;height:50px;" placeholder="Ne sera pas interprété par markdown. Pour les maths, utiliser \(...\) ou \[...\]"><%= question.enonce %></textarea>
	</li>
	<li class="room">
	    <label>
		<span class="froom">Description plus détaillée :</span><br>
		<textarea  <%= canModify ? "" : "readonly" %> name="description" style="width:100%;" rows='10' placeholder="Ceci sera interpreté comme du markdown. Par exemple, il est possible de mettre du code en utilisant:

```ocaml
 let id = fun a -> a in 
   id id
```

Utiliser $...$ pour mettre des maths.
"><%= question.description %></textarea>
	    </label>
	</li>
	<label><input <%- canModify ? "" : "onclick='return false'" %> name="multi" id="multi" style="vertical-align: middle;" type="checkbox" <%= question.type == "multi" ? "checked" : "" %>>Multi-réponses (les étudiants peuvent répondre plusieurs réponses)</label><br>
	<label>Comment corriger la question ?
	    <select <%- canModify ? "" : "onclick='return false'" %> name="strategy" id="strategy" >
		<option <%= question.strategy == "manual" ? "selected" : "" %>  value="manual">Manuellement</option>
		<option <%= question.strategy == "all_or_0" ? "selected" : "" %> value="all_or_0">Death Mode</option>
		<option <%= question.strategy == "QCM" ? "selected" : "" %>  value="QCM">QCM style</option>
	    </select><br>
	    <div> Description de comment corriger </div> <br>
	    Coefficient :
	    <select <%- canModify ? "" : "onclick='return false'" %> name="coef" id="coef">
		<% for(let i=1; i<10; i++){%><option <%= question.coef == i ? "selected" : ""%>><%= i %></option> <% } %>
	    </select>
	</label>
	<% i = 0 ; question.reponses.forEach( function(reponsePossible) { %>
	    <li class="reponse <%= reponsePossible.validity //? "true" : "false" %>">
	<!--    Regroupement des champs hidden   -->
		<input type="hidden" class="texted-hidden" name="texted-<%= i %>" value="<%= reponsePossible.texted ? true : false %>">
		<input type="hidden" class="correctness-hidden" name="correctness-<%= i %>" value="<%= reponsePossible.validity %>">
	<!--    Numéro de réponse                -->
		<span class="froom nreponse"> Réponse <%= i %> :</span>
	<!--    Texte de la réponse              -->
		<textarea
		    rows="2"
		    <%= canModify ? "" : "readonly" %>
		    placeholder="Ne sera pas interprété par markdown. Pour les maths, utiliser \(...\) ou \[...\]"
		    class="value-reponse-textarea"
		    name="value-reponse-<%= i %>"
		    style="width:100%"><%= reponsePossible.reponse %></textarea>
	<!--    Réponse custom ou non            -->
		<div
		    class="text <%= reponsePossible.texted ? "texted" : "" %>"
		    style="text-align:left;margin:3px;">
		    <span><%= reponsePossible.texted ? "Enlever le" : "Ajouter un" %> champs texte</span>
		</div>
		<textarea
		    rows="2"
		    class="correction-textarea"
		    name="correction-<%= i %>"
		    style="<%= reponsePossible.texted ? "" : "display:none;" %> width:100%"
		    placeholder="Vous pouvez rentrer la correction/justification/explication" ><%= reponsePossible.texted ? reponsePossible.correction : "" %></textarea>
	<!--    Peut-on rendre un fichier ?      -->
		<div
		    class="text"
		    style="text-align:left;margin:3px;">
		    <input name="hasFile-<%= i %>" type="checkbox" <%= ["single", "multiple", "true"].includes(reponsePossible.hasFile) ? "checked" : "" %>><span class="fileToggle">Ajouter un upload de fichier</span>
		    <input name="multipleFile-<%= i %>" type="checkbox">Multiple </span>
		    <input name="correcFile-<%= i %>" type="file"> (Fichier pour la correction)
		</div>		
	<!--    Coefficient                      -->
		<div
		    class="text"
		    style="text-align:left;margin:3px;">
		    <input name="coeff-<%= i %>" type="number" value="<%= reponsePossible.coef %>"><label for="coef-<%= i %>"> : Coefficient</label>
		</div>		
	<!--    Boutons pour le management       -->
		<% if(canModify) { %>
		    <div>
			<ul>
			    <li style="display:inline-block; margin-right:20px;">
				<a class="room remove">Enlever cette réponse</a>
			    </li>
			    <li class="set-true select <%= reponsePossible.validity=="true" ? "selected" : "" %>" >
				Réponse juste
			    </li>
			    <li class="set-to_correct select <%= reponsePossible.validity=="to_correct" ? "selected" : "" %>" >
				Réponse à corriger
			    </li>
			    <li class="set-false select <%= reponsePossible.validity=="false" ? "selected" : "" %>" >
				Réponse fausse
			    </li>
			</ul>
		    </div>
		<% } %>
	    </li>
	    <% i++;
	    }); %>
	    <% if(canModify) { %>
		<div  id="ajoutrep"></div>
		<li onclick="addAnswer()" class="room"> <span class="froom">+</span></li>
		<input type="submit" value="Enregistrer cette question">
	    <% } %>
    </ul>
</form>
<% if(canModify) { %>
    <% if (!newQuestion) { %>
	<div style="margin:20px";>    Vous pouvez aussi supprimer définitivement cette question :
	    <form onsubmit='return confirm("Etes-vous sure de vouloir supprimer la question \"<%= question.enonce%>\" ?");' id="delete" method="post" action="<%= config.PATH %>/course/<%= course.id %>/set/<%= set.id %>/question/<%= question.id %>/delete">
		<input type="submit" value="Supprimer cette question"">
	    </form>
	</div>
    <% } %>
<% } %>
<a href="<%= config.PATH %>/course/<%= course.id %>/set/<%= set.id %>/">Revenir au set "<%= set.name %>"</a>
<% if(canModify) { %>
    <script src="/javascripts/question.js"></script>
    <script>
     // ICI ajouter les events listener
     function addReponseListener(div) {
	 div.querySelector(".select.set-true").addEventListener("click", (ev) => {
	     setValue("true", div);
	 });
	 div.querySelector(".select.set-false").addEventListener("click", (ev) => {
	     setValue("false", div);
	 });
	 div.querySelector(".select.set-to_correct").addEventListener("click", (ev) => {
	     setValue("to_correct", div);
	 });
	 div.querySelector(".text").addEventListener("click", (ev) => {
	     toggleText(div);
	 });
	 div.querySelector(".remove").addEventListener("click", (ev) => {
	     removeElement(div);
	 });	 
	 /* div.querySelector(".fileToggle").addEventListener("click", (ev) => {
	    fileToggle(div);
	    });	 */
     }
     document.querySelectorAll(".reponse").forEach((div) => {
//	 let div2 = div;
	 addReponseListener(div);
	 console.log(div)
     });
    </script>
<% } %>
<script src="https://rawgit.com/jackmoore/autosize/master/dist/autosize.min.js"></script>
<script>
autosize(document.querySelectorAll('textarea'));
</script>
<%- include('admin_footer'); -%>
